package com.pioneer.developer.seller.product.service;

import java.io.File;
import java.util.List;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.pioneer.developer.seller.product.mapper.ProductMapper;
import com.pioneer.developer.seller.product.model.ProductDto;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Service
public class ProductServiceImpl implements ProductService {

	@Value("${file.path.user}")
	private String savePath;

	private final ProductMapper productMapper;

	// 상품 등록
	@Override
	public void addProduct(ProductDto productDto) throws Exception {
		MultipartFile mainImg = productDto.getMainImg();

		if (!mainImg.isEmpty()) {
			mainImg.transferTo(new File(savePath + mainImg.getOriginalFilename()));
			productDto.setP_photo1name(mainImg.getOriginalFilename());
		}

		MultipartFile[] subImg = productDto.getSubImg();

		int cnt = 0;
		for (MultipartFile multipartFile : subImg) {
			multipartFile.transferTo(new File(savePath + multipartFile.getOriginalFilename()));

			if (cnt == 0) {
				productDto.setP_photo2name(multipartFile.getOriginalFilename());
			} else if (cnt == 1) {
				productDto.setP_photo3name(multipartFile.getOriginalFilename());
			} else if (cnt == 2) {
				productDto.setP_photo4name(multipartFile.getOriginalFilename());
			}

			cnt++;
		}
		productMapper.addProduct(productDto);
	}

	// 상품 목록 조회
	@Override
	public List<ProductDto> myProductList() {
		return productMapper.myProductList();
	}

	// 상품 삭제
	@Override
	public void productDelete(List<Integer> productno) {

		for (Integer i : productno) {
			productMapper.productDelete(i);

		}

	}

	// 상품 상세 조회
	@Override
	public ProductDto productView(int productno) {
		return productMapper.productView(productno);
	}

	// 상품 수정
	@Override
	public void productUpdate(int productno, String id) {
		productMapper.productUpdate(productno,id);
	}

}
