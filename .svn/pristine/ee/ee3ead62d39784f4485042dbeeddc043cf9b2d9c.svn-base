package com.pioneer.developer.sys.notice.service;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.pioneer.developer.sys.notice.mapper.NoticeMapper;
import com.pioneer.developer.sys.notice.model.NoticeWriteDto;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
@Service
public class NoticeServiceImpl implements NoticeService {

	@Value("${file.path.user}")
	private String savePath;

	private final NoticeMapper noticeMapper;

	// 공지사항 등록
	@Override
	public void addNotice(NoticeWriteDto noticeWriteDto) throws Exception{

		MultipartFile notice_file = noticeWriteDto.getNotice_file();

		if (!notice_file.isEmpty()) {
			notice_file.transferTo(new File(savePath + notice_file.getOriginalFilename()));
			noticeWriteDto.setNotice_filename(notice_file.getOriginalFilename());
		}

		noticeMapper.addNotice(noticeWriteDto);

	}

	// 공지사항 목록
	@Override
	public List<NoticeWriteDto> noticeList() {
		return noticeMapper.noticeList();
	}

	// 공지사항 상세 조회
	@Override
	public NoticeWriteDto noticeView(Integer noticeno) {
		return noticeMapper.noticeView(noticeno);
	}

	// 공지사항 상태 변경
	@Override
	public int noticeUpdateStatus(Integer[] noticeno, String use_yn) {
		int count = 0;
		for (int i = 0; i < noticeno.length; i++) {
			count += noticeMapper.noticeUpdateStatus(noticeno[i], use_yn);
		}
		return count;
	}

	@Override
	public int updateNotice(NoticeWriteDto noticeWriteDto) {
		return noticeMapper.updateNotice(noticeWriteDto);
	}

}
